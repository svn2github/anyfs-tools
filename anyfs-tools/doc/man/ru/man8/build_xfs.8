.TH build_e2fs 8 "04 Aug 2006" "Version 0.84.5"
.SH "НАЗВАНИЕ"
build_xfs \- строит файловую систему XFS исходя из информации \
считанной из файла внешней таблицы инф.узлов.
.SH "СИНТАКСИС"
.nf
.BI "build_xfs [\-b " subopt=value " ] [\-d " subopt [ =value "]]"
.BI "	[\-i " subopt=value "] [\-l " subopt [ =value "]] [\-f]"
.BI "	[\-n " subopt [ =value "]] [\-q] [\-r " subopt [ =value "]]"
.BI "	[\-s " subopt [ =value "]] [\-N] [\-L " label "] " "inode_table devicename "
.fi
.SH "ОПИСАНИЕ"
.B build_xfs
исходя из информации предоставляемой внешней таблицей инф.узлов \
строит на устройстве файловую систему 
.BR XFS .

Построение файловой системы состоит из нескольких шагов:

1) сначала происходит отображение множества номеров инф.узлов используемых \
в anyfs в множество номеров инф.узлов XFS. Тем самым выбирается \
место расположения информации об этих инф.узлах.

2) затем в отдельной битовой карте помечаются все блоки в которых будет \
хранится системная информация (в том числе об инф.узлах) файловой системы.

3) освобождение этих блоков от информации пользователя.
.br
ВНИМАНИЕ. При большом заполнении устройства, на этом этапе возможна нехватка \
места для новой файловой системы, при этом окажется разрушенной как старая \
файловая система, так и не построена новая. Тем не менее изменённая таблица \
информационных узлов при возможности будет сохранена. Однако, лучше избегать \
данной ситуации, предварительным запуском утилиты с опцией
.B -N

4) запись информации об инф.узлах файловой системы.

5) построение Би-деревьев свободных блоков и инф.узлов, запись суперблоков

.br
На 4-5 этапах также возможны ошибки, тем не менее после третьего этапа \
новая таблица инф.узлов уже сохранена и это не должно привести к \
безвозвратной потере данных.
	
.SH "ОПЦИИ"
Утилита
.B build_xfs
основана на
.B mkfs.xfs
из пакета
.B xfsprogs
версии 2.7.11. Абсолютное большинство опций при этом сохранили своё прежнее \
значение и здесь поясняться не будет. Здесь будет дано описание лишь \
некоторых важных опций, новых опций и опций изменивших своё значение.
.TP
.BR \-b " опции размера блока"
Размер блока файловой системы задан в таблице инф.узлов. Попытка указать \
с помощью этих опций размер блока отличный от указанного в таблице \
инф.узлов приведёт к сообщению об ошибке и совету использовать
.BR reblock (8)
для изменения размера блока файловой системы.
.TP
.BI \-p " protofile"
По понятным причинам эта опция и её функциональность были убраны из утилиты -- \
саму таблицу инф.узлов можно считать более мощным аналогом протофайла.
.TP
.B \-N
при указании этой опции реально файловая система создаваться не будет \
тем не менее вы сможете узнать хватает ли места для размещения новой \
файловой системы на устройстве.
.TP
.B \-q
Не выводить никаких сообщений.
.TP
.B \-v
вы можете указать данную опцию до трёх раз, с каждым разом всё более \
увеличивая количество выводимых сообщений утилитой.
.TP
.B \-V
Вывести номер версии и выйти.
.TP
.I inode_table
внешняя таблица инф.узлов из которой будет считана информация о расположении \
пользовательских файлов текущей файловой системы их правах и структуре \
директорий.
.TP
.I device
устройство на котором будет создана новая файловая система.

.SH "ПРИМЕРЫ ИСПОЛЬЗОВАНИЯ"
Проверка достаточности свободного места на устройстве:
.br
$ build_xfs -N inode.table /dev/hda1

построение файловой системы XFS:
.br
$ build_xfs inode.table /dev/hda1

.SH "АВТОР"
Николай Кривченков aka unDEFER <undefer@gmail.com>

.SH "СООБЩЕНИЯ ОБ ОШИБКАХ"
Сообщения о любых проблемах с применением пакета
.B anyfs-tools
направляйте по адресу:
undefer@gmail.com

К описанию проблемы можно приложить таблицу инф.узлов
(сжатая gzip или bzip2 она не должна занять много места)
и размер устройства/образа.

Размер блочного устройства в 512-байтных блоках может быть получен командой
`/sbin/blockdev --getsize <устройство>`

.SH "ДОСТУПНОСТЬ"
последнюю версию пакета вы можете получить на сайте проекта: \
http://anyfs-tools.sourceforge.net

.SH "СМ. ТАКЖЕ"
.BR anyfs-tools(8),
.BR anyfs_inode_table(5),
.BR build_e2fs(8),
.BR mkfs.xfs(8)
