.TH reblock 8 "05 Aug 2006" "Version 0.84.5"
.SH "NAME"
reblock \- change filesystem block size.
.SH "SYNOPSIS"
.BI "reblock [\-nqvV] " "inode_table device blocksize"

.SH "DESCRIPTION"

.B reblock
using information from inode table change each files' fragments placing
so, that it was align by blocks bounds with new size.

WARNING: with increasing filesystem block size it will be makes
really writing to device, and former device filesystem will be destroyed.

WARNING: with increasing filesystem block size and small free space
on device probably there will not enough space for allocating
the next block. At the same time utility will exit with error and
not only former device filesystem will be destroyed, but also
already moved files of external inode table will be partially shifted
or inaccessible.
In this connection RECOMMENDED first use utility with
.BR \-n 
option.
	
.SH "OPTIONS"
.TP
.B \-n
Don't actually reblock the device. In this case it don't actually
read or write on device, nevertheless new inode table will be formed
in memory, will be checked whether there is enough space on device 
for allocating all blocks.
.TP
.B \-q
Don't print any messages.
.TP
.B \-v
Print number of new fragments for every file.
.TP
.B \-V
Print the version number and exit.
.TP
.I inode_table
External inode table. From the file will be read former
filesystem file location and to the file will be written
new its location.
.TP
.I device
Device for changing blocksize.
.TP
.I blocksize
New blocksize. It must be number power of 2 and not less than 512.

.SH "USAGE EXAMPLES"
Check for enough free space on device:
.br
$ reblock -n ~/inode.table /dev/hda1 4096

Reblock /dev/hda1 to 4096 blocksize:
.br
$ reblock ~/inode.table /dev/hda1 4096

.SH "AUTHOR"
Nikolaj Krivchenkov aka unDEFER <undefer@gmail.com>

.SH "BUG REPORTS"
Messages about any problem with using
.B anyfs-tools
package send to
undefer@gmail.com

.SH "AVAILABILITY"
You can obtain the last version of package at
http://anyfs-tools.sourceforge.net

.SH "SEE ALSO"
.BR anyfs-tools(8),
.BR anyfs_inode_table(5)
