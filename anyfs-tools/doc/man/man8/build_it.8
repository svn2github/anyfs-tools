.TH build_it 8 "19 Jan 2007" "Version 0.84.12d"
.SH "NAME"
build_it \- reads directory entries to obtain information about the
physical location of files on a block device along with file access permissions
and saves the data to external inode table file.
.SH "SYNOPSIS"
.BI "build_it [\-qvVnsafp] " "directory inode_table"

.SH "DESCRIPTION"

.B build_it 
uses 
.B Linux
OS filesystem drivers to recursively read directory entries in order to obtain 
information about all of the filesystem inodes.
The information is then saved to an external inode table. The original block
device can then be mounted along with the external inode table to recover data
from the device.

For this utility to work best, the user must have the appropriate filesystem 
driver (maybe read-only) for 
.B Linux 
OS available along with 
.BR ioctl (2)
.BR FIBMAP 
syscall support.
.B FIBMAP
call requires 
.BR root
permissions.
From 0.84.9 version utility use effective identificator
if it's binary file has SUID bit set to call this syscall.
So you can run its without root permissions.

The 
.B build_it
utility has been tested on the following filesystems:
.BR EXT2FS/EXT3FS , " XFS" , " ReiserFS" , " VFAT" , " JFS" , " ISO9660" , " ntfs-3g" .

The best results were obtained from those systems with full 
.BR FIBMAP 
support.
Currently, in
.BR NTFS
driver has
.BR FIBMAP 
support in FUSE
.BR ntfs-3g
driver begining from 0.20061212-BETA version.
At that if you need mount filesystem with
.BR blkdev
option.
Please, read
.BR losetup(8)
if you need to mount FS image (not block device).

Bear in mind, that all enough small files on
.B NTFS
keeps in packed format and it reflects in inode table
as sparse-files. Also as sparse files reflects
all crypted/compressed at filesystem level files.
Look 
.BR \-s 
option description.

For
.BR ReiserFS "(and " Reiser4 )
.B build_it 
calls ioctl UNPACK to avoid "tail-packing" and get right files map.

You can use
.B -n
option if you don't want any changes at filesystems (it maybe important
for recovering) but in this case you may get not quite right inode table.

.SH "OPTIONS"
.TP
.B \-q
Don't print any messages.
.TP
.B \-v
Print some additional information.
.TP
.B \-V
Print the version number and exit.
.TP
.B \-n
Don't unpack ReiserFS and Reiser4 files.
.TP
.B \-s
Print to stdout all sparse-files list.
It used by 
.BR anyconvertfs(8) 
utility to form rescue-list with converting from 
.BR ntfs-3g .
.TP
.B \-a
Use absolute addressing on the entire drive, not its separate partition.
Keep in mind when using this option, that then to mount output inode table
you must specify the entire disk (for example, /dev/hda), and not 
the separate partition (as /dev/hda1, /dev/hdb7).
In addition, it means setting inode table blocksize to sector size (512 bytes),
because measure units of partition offsets in partition table is sectors.
.TP
.B \-f
Process other filesystems located on the partiotions of the same device as 
the specified directory filesystem. So if /dev/hda1 mounted on /mnt/root, 
/dev/hda3 on /mnt/root/home and /dev/hdb1 on /mnt/root/usr, and you
specify /mnt/root as the
.I directory,
to inode table will also include all the contents of /mnt/home, 
but the contents of /mnt/usr was still will not be included to it.
Use the option only with -a.
.TP
.B \-p
Add to inode table also all parent directories from the specified
.I directory
to the root directory.
.TP
.I directory
Directory, usually root_directory/mount_point of filesystem, 
.B build_it
will then make an inode table of this mounted filesystem.
.TP
.I inode_table
File for saving of external inode table.

.SH "USAGE EXAMPLES"
Building an external inode table of filesystem on device mounted at home
directory of user:
.br
# build_it /home/user /tmp/inode.table

Note: will better if future inode.table file will on other device (or in
directory which doesn't located in recursively processed tree)

Note: if mount point in this example /home (not /home/user) then built
external inode table will not include files from other directory than
/home/user -- it will particular inode table of device.

Note: if there are will other mount points in recursively processed trees
(e.g. /home/user/mount/point) -- it will not processed (an inode table
can't keep information from various devices)

.SH "AUTHOR"
Nikolaj Krivchenkov aka unDEFER <undefer@gmail.com>

Translation correction by Adrian Shaw

.SH "BUG REPORTS"
Messages about any problem with using
.B anyfs-tools
package send to
undefer@gmail.com

.SH "AVAILABILITY"
You can obtain the last version of package at
http://anyfs-tools.sourceforge.net

.SH "SEE ALSO"
.BR anyfs-tools(8),
.BR ioctl(2),
.BR ioctl_list(2) ,
.BR anyfs_inode_table(5)
