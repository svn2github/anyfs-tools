.TH anyfs-tools 8 "08 Aug 2006" "Version 0.84.1"
.SH "NAME"
anyfs-tools \- toolset for recovering and converting filesystems and recovering
data from a block device.
.SH "SYNOPSIS"
.nf
.BI "build_it [\-qvV] " "directory inode_table"

.BI "anysurrect [\-b " blocksize "] [\-i " input_inode_table "]"
.BI "	[\-p " path_prefix "] [\-u " file_umask "] [\-U " dir_umask "] [\-fqvV] "
.BI "	[\-g " plug-ins "] [\-e] [\-t" " list_of_types" "] [\-l] " "device inode_table"

.BI "reblock [\-nqvV] " "inode_table device blocksize"

.BI "build_e2fs [ \-c|\-l " filename " ] [\-b " blocksize "]"
.BI "	[\-f " fragment-size "] [\-g " blocks-per-group "]"
.BI "	[\-i " bytes-per-inode "] [\-j] [\-J " journal-options "]"
.BI "	[\-N " number-of-inodes "] [-n] [\-m " reserved-blocks-percentage "]"
.BI "	[\-o " creator-os "] [\-O " feature "[,...]] [\-q]"
.BI "	[\-r " fs-revision-level "] [\-R " raid-options "] [\-v] [\-F]"
.BI "	[\-L " volume-label "] [\-M " last-mounted-directory "] [\-S]"
.BI "	[\-T " filesystem-type "] [\-V] " "inode_table device " [ blocks-count ]

.BI "build_xfs [\-b " subopt=value " ] [\-d " subopt [ =value "]]"
.BI "   [\-i " subopt=value "] [\-l " subopt [ =value "]] [\-f]"
.BI "   [\-n " subopt [ =value "]] [\-q] [\-r " subopt [ =value "]]"
.BI "   [\-s " subopt [ =value "]] [\-N] [\-L " label "] " "inode_table devicename "

.BI "anyconvertfs [\-\-tmpdir " directory "] [\-\-" blocksize "] [\-f] [\-\-dry]"
.BI "   [\-\-inodetable " inodetable "] [\-\-color|\-\-no\-color] [\-\-label" " label" "] "
.BI "   [--dontstop] [--pause " seconds "] [\-\-] " device " [" source_fs ]
.IB "    destination_fs"
.fi

.RB "mount -t " any " -o
.BI inodetable= file.it "[," other_mount_options ] " device dir"

.SH "DESCRIPTION"

.B anyfs-tools
provides a unix-like toolset for recovering and converting filesystems.
The following utils are included in the toolset:

.B build_it 
uses
.B LINUX 
OS filesystem drivers to recursively read directory entries
in order to obtain information about all of the filesystem inodes.
The information is then saved to an external inode table.

.B anysurrect 
searches block devices for specific file types, based on their file structure.
Information  about each found file type is also saved to an external
inode table.

.B reblock 
changes the filesystem block size.
.B reblock
uses information from the filesystems inode table to change each files'
fragments placing so that it will align with block boundaries but with
a new block size.

.B build_e2fs
proceeds from external inode table information for building
.B ext2fs 
filesystems on device.

.B build_xfs
proceeds from external inode table information for building
.B xfs 
filesystems on device.

.B anyconvertfs
converts device filesystem with applying other
.BR anyfs-tools 
utilities.

The
.B anyfs 
filesystem driver for 
.B Linux
allows a user to mount a device using the external inode table information
created by the build_it or anysurrect commands.
Once the filesystem is mounted with the inode table information the user can
perform file operations such as deleting, moving files, making symbolic and
hard links, special files and changing file access permissions.
All changes are applied to the external inode table on unmounting the 
filesystem, leaving the data on the block device unchanged.
	
.SH "USING"
.TP
.B Convert filesystems
.B anyfs-tools
anyfs-tools allows a user to convert filesystems. There is only one requirement
for the existing source filesystem: there must be
.B FIBMAP 
system call
.BR ioctl (2)
support in the filesystem driver (maybe read-only) for 
.B Linux
OS.

Currently anyfs-tools supports filesystem conversion to 
.BR ext2fs/ext3fs " or " xfs,
but it's hoped that in  future  there will be other filesystem building
support. For this to happen, there must first be interest from filesystem 
maintainers and developers.  The advantage of anyfs-tools is that it is a 
convenient tool and does not require much free space for saving of all of
the meta-data for files ably increase the number of users of a particular 
supported filesystem.

Generally, the steps to convert an existing filesystem are as follows:

1)
.B build_it
for reading all informaton about the physical location of files on a disk
and file access permissions, then saving that information to an external 
inode table.

2) maybe
.B anyfs
driver for clear some space for new filesystem.

3) maybe
.B reblock
for changing filesystem blocksize where the destination filesystem doesn't 
support the same blocksize as the source one.

4) Finally, build a filesystem by using 
.BR build_e2fs " or " build_xfs .

The whole converting process maybe automated with using the
.BR anyconvertfs
script.

.TP
.B Recovering damaged filesystem
For recovering files from a damaged filesystem, first use the
.BR anysurrect
command to specify any file types or data that you wish to recover.
It is then possible to use the 
.B anyfs
filesystem  drive to view the recovered data or files and possibly save the 
recovered data to another filesystem. The anyfs filesystem driver can also be
used to rename or sort files into directories, depending on the users 
requirements.
At last also possible to build new filesystem with help of
.BR build_e2fs " or " build_xfs .

anysurrect doesn't recover filenames.
But some intelligent names for its may give
.BR anyrename .
You can download it also in "Download" the anyfs-tools site section.

.TP
.B Recovering files from an undamaged filesystem
The process is the same as that for recovering files from a damaged
filesystem except that you must first execute the 
.B build_it
command to ascertain the physical location of files on the disk.

.SH "ABOUT VERSION NUMBER"
I  have decided that the current package without any file formats support by
.B anysurrect
 util -- is version 0.8. Package version 1.0 should support at least
100 different file formats for recovering.
At the moment there are about 20 file formats support, 
and package version is 0.84.

.SH "AUTHOR"
Nikolaj Krivchenkov aka unDEFER <undefer@gmail.com>

Translation correction by Adrian Shaw

.SH "BUG REPORTS"
Messages about any problem with using
.B anyfs-tools
package send to
undefer@gmail.com

.SH "FEATURE REQUESTS"
For requests for any new file format support, also send to 
undefer@gmail.com

So I will to know in which order I should support different file formats.

.SH "AVAILABILITY"
You can obtain the last version of package at
http://anyfs-tools.sourceforge.net

.SH "SEE ALSO"
.BR build_it(8),
.BR anysurrect(8),
.BR reblock(8),
.BR build_e2fs(8),
.BR build_xfs(8),
.BR anyconvertfs(8),
.BR anyfs(8),
.BR mount(8),
.BR anyfs_inode_table(5),
.BR anysurrect-plugins(3),
.BR libany(3),
.BR ioctl(2),
.BR ioctl_list(2)
